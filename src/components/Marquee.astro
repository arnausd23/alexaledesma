---
const { className } = Astro.props;

---

<div class={`marquee ${className}`}>
	<ul class="marquee-content">
    <slot />
	</ul>
</div>

<style is:global>
.marquee-content li {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #333;
  flex-shrink: 0;
  max-height: 100%;
  width: var(--marquee-element-width);
  /* font-size: 2.3rem; */
  white-space: nowrap;
}

.marquee-content li img {
  height: auto;
}
</style>

<style>
:root {
  --marquee-width: 100vw;
  --marquee-height: 10vh;
  --marquee-elements-displayed: 6;
  --marquee-element-width: calc(var(--marquee-width) / var(--marquee-elements-displayed));
  --marquee-animation-duration: calc(var(--marquee-elements) * 3s);
}

.marquee {
  width: var(--marquee-width);
  height: var(--marquee-height);
  overflow: hidden;
  width: 100vw;
}
.marquee-content {
  list-style: none;
  height: 100%;
  display: flex;
  animation: scrolling var(--marquee-animation-duration) linear infinite;
}
.marquee-content:hover {
  animation-play-state: paused;
}
@keyframes scrolling {
  0% { transform: translateX(0); }
  100% { transform: translateX(calc(-1 * var(--marquee-element-width) * var(--marquee-elements))); }
}

@media (max-width: 600px) {
  html { font-size: 12px; }
  :root {
    --marquee-width: 100vw;
    --marquee-height: 16vh;
    --marquee-elements-displayed: 3;
  }
  .marquee:before, .marquee:after { width: 5rem; }
}
</style>

<script>
  // @ts-nocheck
	const root = document.documentElement;
	const marqueeElementsDisplayed = getComputedStyle(root).getPropertyValue("--marquee-elements-displayed");
	const marqueeContent = document.querySelector("ul.marquee-content");
  
	root.style.setProperty("--marquee-elements", marqueeContent.children.length);
	
	for(let i=0; i<marqueeElementsDisplayed + 1; i++) {
		marqueeContent.appendChild(marqueeContent.children[i].cloneNode(true));
	}
</script>